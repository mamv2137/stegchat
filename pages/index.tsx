import type { NextPage } from 'next';
import Head from 'next/head';
import { Input, Button } from '@chakra-ui/react';
import { useMoralis, useERC20Balances } from 'react-moralis';
import { useEffect, useReducer, useState } from 'react';
import uniqBy from 'lodash/uniqBy';

import Gun from 'gun';
import _ from 'lodash';

interface Message {
  name: string;
  createdAt: string;
  message: string;
}

interface State {
  messages: Message[];
}

const gun = Gun({ peers: ['https://mvp-gun.herokuapp.com/gun'] });

function reducer(state: State, message: Message): State {
  return {
    messages: uniqBy([message, ...state.messages], 'createdAt'),
  };
}

const initialState = {
  messages: [],
};

const Home: NextPage = () => {
  const [formState, setFormState] = useState({
    name: '',
    message: '',
  });

  const [state, dispatch] = useReducer(reducer, initialState);

  const { authenticate, authError, isAuthenticated, logout, user } =
    useMoralis();

  function onChange(e: React.ChangeEvent<HTMLInputElement>) {
    setFormState({ ...formState, [e.target.name]: e.target.value });
  }

  const handleAuth = () => {
    authenticate({
      signingMessage: 'Que lo que vale',
    });
  };

  function saveMessage() {
    const messages = gun.get('messages');
    messages.set({
      name: formState.name,
      message: formState.message,
      createdAt: Date.now(),
    });
    setFormState({
      name: '',
      message: '',
    });
  }

  useEffect(() => {
    const messages = gun.get('messages');
    messages.map().on((m) => {
      dispatch({
        name: m.name,
        message: m.message,
        createdAt: m.createdAt,
      });
    });
  }, []);

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {isAuthenticated ? (
        <>
          <Button onClick={logout}>log out</Button>
          <pre>{JSON.stringify(user, null, 2)}</pre>
        </>
      ) : (
        <Button onClick={handleAuth}>Login</Button>
      )}
      <Input
        onChange={onChange}
        placeholder="Name"
        name="name"
        value={formState.name}
      />
      <Input
        onChange={onChange}
        placeholder="Message"
        name="message"
        value={formState.message}
      />
      <Button onClick={saveMessage}>Send Message</Button>
      {state.messages.map((message) => (
        <div key={message.createdAt}>
          <h2>{message.message}</h2>
          <h3>From: {message.name}</h3>
          <p>Date: {message.createdAt}</p>
        </div>
      ))}
    </div>
  );
};

export default Home;
